import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as n,c as r,a as t,b as e,d as a,f as p}from"./app-wEVXMROB.js";const h={},g=t("p",null,[t("strong",null,"作者注：建议使用Github替换Gitee。")],-1),s=t("p",null,[t("strong",null,"作者两年亲身体验告诉大家，Github做图床十分靠谱！！有CDN加速访问巨快！！")],-1),l=t("p",null,[t("strong",null,[e("别担心不稳定"),t("sub",null,"！别担心访问慢"),e("！这些问题统统不存在。")])],-1),b=t("h2",{id:"_1-注册一个github账号",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_1-注册一个github账号"},[t("span",null,[t("strong",null,"1. 注册一个Github账号")])])],-1),d=t("p",null,"首先你需要一个github账号，如果没有的话，先注册。",-1),f={href:"https://link.zhihu.com/?target=https%3A//github.com/",target:"_blank",rel:"noopener noreferrer"},m=p('<p>注册过程省略，因为这是保姆都不管的事情。</p><p>友情提示：可能在注册过程中会出现 “Unable to verify your captcha response… …”，一直不能正常注册。</p><p>网上有各种解决方案：换浏览器、换电脑… …</p><h2 id="_2-配置github" tabindex="-1"><a class="header-anchor" href="#_2-配置github"><span>2. 配置Github</span></a></h2><h3 id="_2-1-创建一个新仓库-用于存放图片。" tabindex="-1"><a class="header-anchor" href="#_2-1-创建一个新仓库-用于存放图片。"><span>2.1 创建一个新仓库，用于存放图片。</span></a></h3><figure><img src="https://pic1.zhimg.com/80/v2-59b7f87b4fbe21a2492e4b9e529fe87c_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>填写仓库名称和描述，且仓库必须是public的，否则存储的图片不能正常访问。</p><figure><img src="https://pic3.zhimg.com/80/v2-d3733c14e8c9b53cb5cf9f7607d51c8a_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-2-生成一个token-用于picgo访问github" tabindex="-1"><a class="header-anchor" href="#_2-2-生成一个token-用于picgo访问github"><span>2.2 生成一个token，用于picGo访问github</span></a></h3><figure><img src="https://pic4.zhimg.com/80/v2-4d227062bcfa58dba6c0582c982b737b_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择左侧菜单的Developer settings</p><figure><img src="https://pic4.zhimg.com/80/v2-4d227062bcfa58dba6c0582c982b737b_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>之后选择左侧Personal access tokens，再点击Generate new token</p><figure><img src="https://pic1.zhimg.com/80/v2-2d5bcabac97557591c4203009d306750_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>填写Note，勾选repo.</p><figure><img src="https://pic2.zhimg.com/80/v2-346da4ccf189eb5997abe2fadadca331_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意，生成的token只会在这里显示一次，所以记得单独保存下来哦。</p><figure><img src="https://pic3.zhimg.com/80/v2-354ea85a4bd9cfc99157b86cae9a2332_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>至此，Github的配置完成。</p><h2 id="_3-下载picgo-并进行配置" tabindex="-1"><a class="header-anchor" href="#_3-下载picgo-并进行配置"><span>3. 下载picGo，并进行配置</span></a></h2><h3 id="_3-1-下载" tabindex="-1"><a class="header-anchor" href="#_3-1-下载"><span>3.1 下载</span></a></h3><p>网络不好的情况下，PicGo下载可能会多次失败，所以我把下载好的应用放在百度网盘了。</p><p>大家按需取用。</p><figure><img src="https://pic4.zhimg.com/80/v2-279f576c0dc0861fd7edcf1d43e5675f_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',24),u={href:"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1LvkzLJyZcjpflK2Evq3X9A",target:"_blank",rel:"noopener noreferrer"},_=p('<p>下载完成，双击启动安装即可。</p><p>如果安装成功，picGo不能正常使用，则可以用兼容模式启动。【此问题因电脑而异，也是我在配置过程中踩过的坑。】</p><figure><img src="https://pic2.zhimg.com/80/v2-3f60ccb549e01c95a1702ceca9bda95d_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-配置" tabindex="-1"><a class="header-anchor" href="#_3-2-配置"><span>3.2 配置</span></a></h3><p>仓库名：[github用户名]/[第一步新建的仓库名称]</p><p>分支：默认master，从2020.10.01开始，github的默认分支名变更为main</p><p>设定token：第一步创建的token</p><p>指定存储路径：可填可不填，如果填写了，图片就会存储在img文件夹下</p><p>设定自定义域名：https://cdn.jsdelivr.net/gh/[github用户名]/[仓库名]@main，注意，此处的分支一定要填写@main，否则默认使用master分支。而现在github创建的默认分支名为main，如果不指定，则会出现图片不能上传的情况。【踩坑两小时】</p><figure><img src="https://pic3.zhimg.com/80/v2-62e4faaa7999d1d32fa80aec44b4034e_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>至此，github+picGo的配置完成，可以在上传区进行图片上传了。</p><h3 id="_3-3-补充几点" tabindex="-1"><a class="header-anchor" href="#_3-3-补充几点"><span>3.3 补充几点</span></a></h3>',12),w={href:"https://link.zhihu.com/?target=https%3A//raw.githubusercontent.com/%255Busername%255D/%255B%25E4%25BB%2593%25E5%25BA%2593%25E5%2590%258D%255D",target:"_blank",rel:"noopener noreferrer"},y=p('<p>但是使用这种方式访问图片巨慢，所以教程中使用了jsdelivr作为cdn加速。改变域名即可，不需要任何其他配置。</p><p>2.配置完成，可能出现不能上传的情况，请大家耐心检查，也许某一步的配置出现了问题，就像检查bug一样耐心、细心。想象一下图床搭建成功后，写起文章来的丝滑感，是不是又有动力了？</p><h2 id="_4-picgo集成typora" tabindex="-1"><a class="header-anchor" href="#_4-picgo集成typora"><span>4. PicGo集成Typora</span></a></h2><p>使用MarkDown语法写文章，我使用的编辑器是typora，一款超级好用的编辑器。在一个编辑框内，编辑完成后，可以马上显示MarkDown语法效果。</p><p>举个栗子：</p><figure><img src="https://pic2.zhimg.com/80/v2-ce0b207c19d6ca32ac22937f1dc6cfcd_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>并且typora可以和picGo联合在一起使用，当你在编辑器中插入、粘贴图片时，typora+picGo的组合方式，可以自动把图片上传至github保存。</p><h3 id="_4-1-下载安装" tabindex="-1"><a class="header-anchor" href="#_4-1-下载安装"><span>4.1 下载安装</span></a></h3><p>Typora新版本是收费的，所以建议大家使用旧版本就可以了，完全能满足写作需求。</p><p>旧版本安装包和picGo放在一起了（下载地址见上文），大家按需取用即可。</p><p>下载完成后正常步骤安装即可。</p><h3 id="_4-2-配置" tabindex="-1"><a class="header-anchor" href="#_4-2-配置"><span>4.2 配置</span></a></h3><p>在typora顶部菜单界面，选择“文件” - &gt; “偏好设置”，设置图片存储方式。</p><figure><img src="https://pic1.zhimg.com/80/v2-f595cf5c8a0e3b62944c68deb8fb5878_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择图片存储方式：上传图片。</p><p>上传服务：PicGo(app)</p><p>PicGo路径：picGo安装的地址</p><p>设置完成，点击“验证图片上传”，提示上传成功，即代表配置成功。</p><figure><img src="https://pic2.zhimg.com/80/v2-e27e9f198aef7bdea365549b2257025d_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意一点，typora图片验证中的端口，需要与picGo中的server设置内的端口一致，否则typora中不能正常上传。</p><h3 id="_4-3-picgo监听端口设置" tabindex="-1"><a class="header-anchor" href="#_4-3-picgo监听端口设置"><span>4.3 picGo监听端口设置</span></a></h3><p>选择“PicGo设置”–&gt;“设置server”</p><figure><img src="https://pic4.zhimg.com/80/v2-8ff622935a6b0597a21e68e7575e16ef_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>【此处有坑】如果监听端口不是36677，则需要修改为36677。否则会出现picGo能正常上传 图片，而typora上传图片失败的情况。</p><figure><img src="https://pic3.zhimg.com/80/v2-304589efaed9a1ba3caf5e8827e77582_1440w.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最后，在苹果电脑中可以使用<strong>Typora+Ipic+Github</strong>的方式，有兴趣的话可以自行尝试</p><p><strong>总结：github+picGo+typora他们三个是好基友。</strong></p><p>分享到此结束，保姆也该撤了~</p>',28);function v(G,z){const i=o("ExternalLinkIcon");return n(),r("div",null,[g,s,l,b,d,t("p",null,[e("github官网地址： "),t("a",f,[e("https://github.com/"),a(i)])]),m,t("p",null,[e("网盘地址："),t("a",u,[e("https://pan.baidu.com/s/1LvkzLJyZcjpflK2Evq3X9A"),a(i)]),e(" 提取码：s6x7")]),_,t("p",null,[e("1.原本github的自定义域名应该是："),t("a",w,[e("https://raw.githubusercontent.com/[username]/[仓库名]"),a(i)])]),y])}const D=c(h,[["render",v],["__file","GitHub-and-picGo-Deploy.html.vue"]]),N=JSON.parse('{"path":"/notes/GitHub-and-picGo-Deploy.html","title":"OpenWrt 安装教程","lang":"zh-CN","frontmatter":{"title":"OpenWrt 安装教程","icon":"fab fa-markdown","order":2,"category":["安装教程"],"tag":["GitHub","picGo"],"description":"作者注：建议使用Github替换Gitee。 作者两年亲身体验告诉大家，Github做图床十分靠谱！！有CDN加速访问巨快！！ 别担心不稳定！别担心访问慢！这些问题统统不存在。 1. 注册一个Github账号 首先你需要一个github账号，如果没有的话，先注册。 github官网地址： https://github.com/ 注册过程省略，因为这是保...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/GitHub-and-picGo-Deploy.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"OpenWrt 安装教程"}],["meta",{"property":"og:description","content":"作者注：建议使用Github替换Gitee。 作者两年亲身体验告诉大家，Github做图床十分靠谱！！有CDN加速访问巨快！！ 别担心不稳定！别担心访问慢！这些问题统统不存在。 1. 注册一个Github账号 首先你需要一个github账号，如果没有的话，先注册。 github官网地址： https://github.com/ 注册过程省略，因为这是保..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic1.zhimg.com/80/v2-59b7f87b4fbe21a2492e4b9e529fe87c_1440w.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-13T15:48:47.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"OpenWrt 安装教程"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"GitHub"}],["meta",{"property":"article:tag","content":"picGo"}],["meta",{"property":"article:modified_time","content":"2024-02-13T15:48:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenWrt 安装教程\\",\\"image\\":[\\"https://pic1.zhimg.com/80/v2-59b7f87b4fbe21a2492e4b9e529fe87c_1440w.webp\\",\\"https://pic3.zhimg.com/80/v2-d3733c14e8c9b53cb5cf9f7607d51c8a_1440w.webp\\",\\"https://pic4.zhimg.com/80/v2-4d227062bcfa58dba6c0582c982b737b_1440w.webp\\",\\"https://pic4.zhimg.com/80/v2-4d227062bcfa58dba6c0582c982b737b_1440w.webp\\",\\"https://pic1.zhimg.com/80/v2-2d5bcabac97557591c4203009d306750_1440w.webp\\",\\"https://pic2.zhimg.com/80/v2-346da4ccf189eb5997abe2fadadca331_1440w.webp\\",\\"https://pic3.zhimg.com/80/v2-354ea85a4bd9cfc99157b86cae9a2332_1440w.webp\\",\\"https://pic4.zhimg.com/80/v2-279f576c0dc0861fd7edcf1d43e5675f_1440w.webp\\",\\"https://pic2.zhimg.com/80/v2-3f60ccb549e01c95a1702ceca9bda95d_1440w.webp\\",\\"https://pic3.zhimg.com/80/v2-62e4faaa7999d1d32fa80aec44b4034e_1440w.webp\\",\\"https://pic2.zhimg.com/80/v2-ce0b207c19d6ca32ac22937f1dc6cfcd_1440w.webp\\",\\"https://pic1.zhimg.com/80/v2-f595cf5c8a0e3b62944c68deb8fb5878_1440w.webp\\",\\"https://pic2.zhimg.com/80/v2-e27e9f198aef7bdea365549b2257025d_1440w.webp\\",\\"https://pic4.zhimg.com/80/v2-8ff622935a6b0597a21e68e7575e16ef_1440w.webp\\",\\"https://pic3.zhimg.com/80/v2-304589efaed9a1ba3caf5e8827e77582_1440w.webp\\"],\\"dateModified\\":\\"2024-02-13T15:48:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 注册一个Github账号","slug":"_1-注册一个github账号","link":"#_1-注册一个github账号","children":[]},{"level":2,"title":"2. 配置Github","slug":"_2-配置github","link":"#_2-配置github","children":[{"level":3,"title":"2.1 创建一个新仓库，用于存放图片。","slug":"_2-1-创建一个新仓库-用于存放图片。","link":"#_2-1-创建一个新仓库-用于存放图片。","children":[]},{"level":3,"title":"2.2 生成一个token，用于picGo访问github","slug":"_2-2-生成一个token-用于picgo访问github","link":"#_2-2-生成一个token-用于picgo访问github","children":[]}]},{"level":2,"title":"3. 下载picGo，并进行配置","slug":"_3-下载picgo-并进行配置","link":"#_3-下载picgo-并进行配置","children":[{"level":3,"title":"3.1 下载","slug":"_3-1-下载","link":"#_3-1-下载","children":[]},{"level":3,"title":"3.2 配置","slug":"_3-2-配置","link":"#_3-2-配置","children":[]},{"level":3,"title":"3.3 补充几点","slug":"_3-3-补充几点","link":"#_3-3-补充几点","children":[]}]},{"level":2,"title":"4. PicGo集成Typora","slug":"_4-picgo集成typora","link":"#_4-picgo集成typora","children":[{"level":3,"title":"4.1 下载安装","slug":"_4-1-下载安装","link":"#_4-1-下载安装","children":[]},{"level":3,"title":"4.2 配置","slug":"_4-2-配置","link":"#_4-2-配置","children":[]},{"level":3,"title":"4.3 picGo监听端口设置","slug":"_4-3-picgo监听端口设置","link":"#_4-3-picgo监听端口设置","children":[]}]}],"git":{"createdTime":1707839327000,"updatedTime":1707839327000,"contributors":[{"name":"Shenb","email":"shenbourne@163.com","commits":1}]},"readingTime":{"minutes":4.1,"words":1230},"filePathRelative":"notes/GitHub-and-picGo-Deploy.md","localizedDate":"2024年2月13日","excerpt":"<p><strong>作者注：建议使用Github替换Gitee。</strong></p>\\n<p><strong>作者两年亲身体验告诉大家，Github做图床十分靠谱！！有CDN加速访问巨快！！</strong></p>\\n<p><strong>别担心不稳定<sub>！别担心访问慢</sub>！这些问题统统不存在。</strong></p>\\n<h2><strong>1. 注册一个Github账号</strong></h2>\\n<p>首先你需要一个github账号，如果没有的话，先注册。</p>\\n<p>github官网地址：&nbsp;<a href=\\"https://link.zhihu.com/?target=https%3A//github.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/</a></p>","autoDesc":true}');export{D as comp,N as data};
