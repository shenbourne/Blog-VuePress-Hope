import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as p,c as r,a as e,b as t,d as n,e as a}from"./app-1sgGYa0g.js";const c={},d=e("h3",{id:"_1-部署到-github-pages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-部署到-github-pages"},[e("span",null,"1. 部署到 GitHub Pages")])],-1),l=e("code",null,"docs/.config.js",-1),g={href:"https://vuejs.press/zh/reference/config.html#base",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"base",-1),h=a("<ul><li><p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/</code>，则可以省略这一步，因为 <code>base</code> 默认即是 <code>&quot;/&quot;</code>。</p></li><li><p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>（也就是说你的仓库在 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>），则将 <code>base</code> 设置为 <code>&quot;/&lt;REPO&gt;/&quot;</code>。</p></li></ul><p>当操作完成后，你应该前往 GitHub 仓库的设置页面，选择 <code>gh-pages</code> 作为 GitHub Pages 的源。</p>",2),b={class:"hint-container warning"},m=e("p",{class:"hint-container-title"},"Github 教程",-1),f={href:"https://mister-hope.com/code/github/",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="hint-container tip"><p class="hint-container-title">不过我在部署时遇到问题：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>Dependencies lock file is not found <span class="token keyword">in</span> <span class="token operator">/</span>home<span class="token operator">/</span><span class="token punctuation">{</span>username<span class="token punctuation">}</span><span class="token operator">/</span>runners<span class="token operator">...</span><span class="token operator">/</span>repository_name<span class="token punctuation">.</span> Supported file patterns<span class="token operator">:</span> <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json<span class="token punctuation">,</span>yarn<span class="token punctuation">.</span>lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要修改下<code>workflows</code>文件：去除npm cache设置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: <span class="token number">18</span>
        <span class="token comment">#  cache: npm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>cicd执行成功后，会多一个部署<code>gh-pages</code>分支。</p></div><p>部署<code>gh-pages</code>分支是文件流中配置的，你可以修改</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>      - name: 部署文档
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          <span class="token comment"># 这是文档部署到的分支名称</span>
          branch: gh-pages
          folder: src/.dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-e14fe5461cdfb08b6e0a1932d492ae4c_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接着最重要的一步，到仓库的设置页面设置如下的内容：</p><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-a55a2d45b21f581296d09b02a062a037_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>该设置的意思是，将选中的分支内容部署在github自带的页面服务中。</p><p>接着点击<code>save</code>按钮，就可以去对应的站点访问了。</p>`,8),_={href:"https://link.juejin.cn?target=https%3A%2F%2Fmmdctjj.github.io%2Fblogs2%2F",title:"https://mmdctjj.github.io/blogs2/",target:"_blank",rel:"noopener noreferrer"},y=a('<h3 id="_2-添加评论功能" tabindex="-1"><a class="header-anchor" href="#_2-添加评论功能"><span>2. 添加评论功能</span></a></h3><p>不同的插件，评论的实现原理不同，我接触过最早的原理是通过将评论信息映射到仓库的issue中。</p><p>然而，后来开始流行<code>Discussions</code>，这也是<code>vuepress-theme-hope</code>推荐的方式，</p><blockquote><p>如果你的博客面向程序员，请使用<code>Giscus</code>，面向大众请选择<code>Waline</code>, 所以我选择了<code>Giscus</code></p></blockquote><p>首先需要你创建一个空的仓库。其次，由于评论需要用户登录到GitHub，所以，我们还需要提供登录应用的服务。</p><p>这里我们不用担心，因为Github为我们提供了简单的登陆应用的功能：<code>giscus</code>,</p>',6),j={href:"https://github.com/apps/giscus",target:"_blank",rel:"noopener noreferrer"},k=a('<figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-e13154e3efd91f784218615bc9adf9ca_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击<code>install</code>按钮，在配置详情页中选择对应的生效仓库。（这里我选择仅仅对评论仓库生效）</p><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-ea99fa53fe4252254d77627d4f0bf988_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后回到评论仓库，点击<code>seething</code>，选中<code>Feature</code>下的<code>Discussions</code></p><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-a102162cac6499c56a4540d346d717fb_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击<code>set up discussions</code>，默认的文本不需要修改，点击提交即可出现如下页面，说明该功能启用成功。</p><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-a6d3618658113f74ca726cee63af6663_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',7),H={href:"https://giscus.app/zh-CN",target:"_blank",rel:"noopener noreferrer"},P=a(`<figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-3cb268874b44a1c4aa62dbb4fd6d6496_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-bc8fc4bd00b33c61d4f728f3bb7e7527_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在启用栏目复制以下几个信息。</p><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-0a298ebbbc92b19922ed10f8f6cf4bdd_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接着将以下信息复到<code>theme.ts</code>即可：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="\\src.vuepress\\theme.ts"><pre class="language-javascript"><code>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">comment</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// You should generate and use your own comment service</span>
      <span class="token literal-property property">provider</span><span class="token operator">:</span> <span class="token string">&quot;Giscus&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">repo</span><span class="token operator">:</span> <span class="token string">&quot;mmdctjj/blogs-comments&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">repoId</span><span class="token operator">:</span> <span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 替换下</span>
      <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&quot;Announcements&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">categoryId</span><span class="token operator">:</span> <span class="token string">&quot;xxxx&quot;</span> <span class="token comment">// 替换下</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时当我们评论之后，在评论仓库查看，</p><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-14d4de4f357aebc829a2a4840e049577_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-github-pages使用自定义域名访问" tabindex="-1"><a class="header-anchor" href="#_3-github-pages使用自定义域名访问"><span>3. Github pages使用自定义域名访问</span></a></h3><ol><li><p>购买域名并配置DNS（以cloudflare为例）</p></li><li><p>点进自己域名，并添加DNS记录</p></li></ol><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-7faca8c480b85853fca02061b3c21fe4_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>配置记录</li></ol><table><thead><tr><th>key</th><th>value</th><th>comment</th></tr></thead><tbody><tr><td>记录类型</td><td>需选择“CNAME”</td><td>CNAME记录可以将&lt;username&gt;.github.io指向购买的域名</td></tr><tr><td>名称</td><td>可填写“www”或“blog”</td><td>这取决你网站的个人用途。如我填写“blog”时，shenbourne.github.io会指向blog.shenbourne.com</td></tr><tr><td>目标</td><td>填写“&lt;username&gt;.github.io”</td><td>此处username为GitHub用户名。例如我的用户名是shenbourne，则我填写“shenbourne.github.io”</td></tr></tbody></table><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-ffe655d90d28fa9c9f4fb09e378236dd_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>填好后点击保存</p><ol start="4"><li>绑定到Github Pages：项目仓库 &gt; Settings &gt; Pages &gt; Custom domain，在Custom domain中填写你在步骤2中配置好的域名，点击“Save”。</li></ol><figure><img src="https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-4103fe51569ff733913576ed9068e648_MD5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>GitHub会花费一点时间做DNS check，成功时你能看到成功的提示。</p><ol start="5"><li>再耐心等待一段时间（通常是十余分钟）后，在浏览器输入自定义的域名，即可打开你的博客</li></ol>`,19);function S(V,x){const s=i("ExternalLinkIcon");return p(),r("div",null,[d,e("p",null,[t("如果你在使用模板，且在创建过程中选择了创建自动部署文档的 GitHub 工作流，那么你唯一要做的就是在 "),l,t(" 中设置正确的 "),e("a",g,[u,n(s)]),t(" 选项。")]),h,e("div",b,[m,e("p",null,[t("关于 GitHub 的相关教程，你可以参考 "),e("a",f,[t("GitHub 简介"),n(s)]),t("。")])]),v,e("p",null,[t("我的站点："),e("a",_,[t("mmdctjj.github.io/blogs2/"),n(s)])]),y,e("p",null,[t("首先安装Giscus："),e("a",j,[t("GitHub Apps - giscus · GitHub"),n(s)])]),k,e("p",null,[t("接着，我们前往"),e("a",H,[t("giscus.app/zh-CN"),n(s)]),t(" 设置你的仓库和分类")]),P])}const D=o(c,[["render",S],["__file","VuePress-theme-hope2-GitHub-deploy.html.vue"]]),I=JSON.parse('{"path":"/appendix/VuePress-theme-hope2-GitHub-deploy.html","title":"VuePress-theme-hope2 将个人网站部署到GitHub","lang":"zh-CN","frontmatter":{"title":"VuePress-theme-hope2 将个人网站部署到GitHub","icon":"page","order":2,"category":["安装教程"],"tag":["VuePress","GitHub"],"description":"1. 部署到 GitHub Pages 如果你在使用模板，且在创建过程中选择了创建自动部署文档的 GitHub 工作流，那么你唯一要做的就是在 docs/.config.js 中设置正确的 base 选项。 如果你打算发布到 https://<USERNAME>.github.io/，则可以省略这一步，因为 base 默认即是 \\"/\\"。 如果你打算发布...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/appendix/VuePress-theme-hope2-GitHub-deploy.html"}],["meta",{"property":"og:site_name","content":"ShenBourne"}],["meta",{"property":"og:title","content":"VuePress-theme-hope2 将个人网站部署到GitHub"}],["meta",{"property":"og:description","content":"1. 部署到 GitHub Pages 如果你在使用模板，且在创建过程中选择了创建自动部署文档的 GitHub 工作流，那么你唯一要做的就是在 docs/.config.js 中设置正确的 base 选项。 如果你打算发布到 https://<USERNAME>.github.io/，则可以省略这一步，因为 base 默认即是 \\"/\\"。 如果你打算发布..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-e14fe5461cdfb08b6e0a1932d492ae4c_MD5.jpeg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T13:30:06.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"VuePress-theme-hope2 将个人网站部署到GitHub"}],["meta",{"property":"article:author","content":"ShenBourne"}],["meta",{"property":"article:tag","content":"VuePress"}],["meta",{"property":"article:tag","content":"GitHub"}],["meta",{"property":"article:modified_time","content":"2024-02-17T13:30:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VuePress-theme-hope2 将个人网站部署到GitHub\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-e14fe5461cdfb08b6e0a1932d492ae4c_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-a55a2d45b21f581296d09b02a062a037_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-e13154e3efd91f784218615bc9adf9ca_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-ea99fa53fe4252254d77627d4f0bf988_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-a102162cac6499c56a4540d346d717fb_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-a6d3618658113f74ca726cee63af6663_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-3cb268874b44a1c4aa62dbb4fd6d6496_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-bc8fc4bd00b33c61d4f728f3bb7e7527_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-0a298ebbbc92b19922ed10f8f6cf4bdd_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-14d4de4f357aebc829a2a4840e049577_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-7faca8c480b85853fca02061b3c21fe4_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-ffe655d90d28fa9c9f4fb09e378236dd_MD5.jpeg\\",\\"https://cdn.jsdelivr.net/gh/shenbourne/Image-Hosting-Service@main/blog/VuePress-theme-hope2-deploy-4103fe51569ff733913576ed9068e648_MD5.jpeg\\"],\\"dateModified\\":\\"2024-02-17T13:30:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ShenBourne\\",\\"url\\":\\"https://blog.shenbourne.com\\"}]}"]]},"headers":[{"level":3,"title":"1. 部署到 GitHub Pages","slug":"_1-部署到-github-pages","link":"#_1-部署到-github-pages","children":[]},{"level":3,"title":"2. 添加评论功能","slug":"_2-添加评论功能","link":"#_2-添加评论功能","children":[]},{"level":3,"title":"3. Github pages使用自定义域名访问","slug":"_3-github-pages使用自定义域名访问","link":"#_3-github-pages使用自定义域名访问","children":[]}],"git":{"createdTime":1708172762000,"updatedTime":1708176606000,"contributors":[{"name":"Shenb","email":"shenbourne@163.com","commits":2}]},"readingTime":{"minutes":3.69,"words":1106},"filePathRelative":"appendix/VuePress-theme-hope2-GitHub-deploy.md","localizedDate":"2024年2月17日","excerpt":"<h3>1. 部署到 GitHub Pages</h3>\\n<p>如果你在使用模板，且在创建过程中选择了创建自动部署文档的 GitHub 工作流，那么你唯一要做的就是在&nbsp;<code>docs/.config.js</code>&nbsp;中设置正确的&nbsp;<a href=\\"https://vuejs.press/zh/reference/config.html#base\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>base</code></a> 选项。</p>\\n<ul>\\n<li>\\n<p>如果你打算发布到&nbsp;<code>https://&lt;USERNAME&gt;.github.io/</code>，则可以省略这一步，因为&nbsp;<code>base</code>&nbsp;默认即是&nbsp;<code>\\"/\\"</code>。</p>\\n</li>\\n<li>\\n<p>如果你打算发布到&nbsp;<code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>（也就是说你的仓库在&nbsp;<code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>），则将&nbsp;<code>base</code>&nbsp;设置为&nbsp;<code>\\"/&lt;REPO&gt;/\\"</code>。</p>\\n</li>\\n</ul>","autoDesc":true}');export{D as comp,I as data};
